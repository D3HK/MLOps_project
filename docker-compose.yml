services:
  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    command: >
      mlflow server
      --host 0.0.0.0
      --backend-store-uri sqlite:///mlflow/mlflow.db
      --default-artifact-root /mlflow/artifacts
      --serve-artifacts
      --gunicorn-opts "--log-level debug"
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow:rw
    env_file: .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    restart: unless-stopped

  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data:rw
      - ./src/models:/app/src/models:rw
      - ./.dvc:/app/.dvc:rw
      - ./.dvc/cache:/app/.dvc/cache:rw
      - ./mlruns:/mlflow:rw
    env_file: .env
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      mlflow:
        condition: service_healthy
    restart: unless-stopped

  airflow:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__LOGGING__BASE_LOG_FOLDER=/opt/airflow/logs
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: >
      bash -c "
      airflow standalone
      "
